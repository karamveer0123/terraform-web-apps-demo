name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.4
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Log in to Azure
    - name: Azure login
      uses: azure/login@v1
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: terraform-manifest
      run: terraform init -backend-config="storage_account_name=terraformstatefilegithub" -backend-config="container_name=terraformstatefiles" -backend-config="key=githubactions.tfstate" -backend-config="access_key=${{ secrets.AZURE_STORAGE_ACCESS_KEY }}"
    # validate the terraform files 
    - name: Terraform validate
      working-directory: terraform-manifest
      run: terraform validate
    # terraform plan
    - name: Terraform Plan
      working-directory: terraform-manifest
      run: terraform plan -out=tfplan
    # terraform apply
    - name: Terraform Apply
      working-directory: terraform-manifest
      run: terraform apply --auto-approve tfplan